{"ast":null,"code":"var _jsxFileName = \"/Users/yufeilyu/Desktop/Task8.1P/src/views/home/Cards.js\";\nimport React from 'react';\nimport faker from 'faker';\nimport { Card, Image, Rating } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards() {\n  const contacts = new Array(20).fill(1).map(d => faker.helpers.createCard());\n  console.log(contacts);\n\n  let report = () => `https://picsum.photos/200/100?random=1${Math.random(0.4)}`;\n\n  contacts.forEach(d => d.src = report());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: \"repeat(4,24%)\",\n      justifyItems: 'center',\n      gridGap: \"1%\",\n      marginTop: '1vh',\n      alignItems: 'center'\n    },\n    children: contacts.map(d => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: d.src,\n          wrapped: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: d.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: d.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: d.company.catchPhrase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            icon: \"star\",\n            defaultRating: parseInt(Math.random() * 5),\n            maxRating: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, `key${d.name}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/yufeilyu/Desktop/Task8.1P/src/views/home/Cards.js"],"names":["React","faker","Card","Image","Rating","Cards","contacts","Array","fill","map","d","helpers","createCard","console","log","report","Math","random","forEach","src","display","gridTemplateColumns","justifyItems","gridGap","marginTop","alignItems","name","email","company","catchPhrase","parseInt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAMC,QAAQ,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0BC,CAAC,IAAIT,KAAK,CAACU,OAAN,CAAcC,UAAd,EAA/B,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;;AACA,MAAIS,MAAM,GAAG,MAAO,yCAAwCC,IAAI,CAACC,MAAL,CAAY,GAAZ,CAAiB,EAA7E;;AACAX,EAAAA,QAAQ,CAACY,OAAT,CAAiBR,CAAC,IAAIA,CAAC,CAACS,GAAF,GAAQJ,MAAM,EAApC;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,mBAAmB,EAAE,eAAxC;AAAyDC,MAAAA,YAAY,EAAE,QAAvE;AAAiFC,MAAAA,OAAO,EAAE,IAA1F;AAAgGC,MAAAA,SAAS,EAAE,KAA3G;AAAkHC,MAAAA,UAAU,EAAE;AAA9H,KAAZ;AAAA,cACKnB,QAAQ,CAACG,GAAT,CAAaC,CAAC,IAAI;AAEf,0BAAO,QAAC,IAAD;AAAA,gCACH,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,CAAC,CAACS,GAAd;AAAmB,UAAA,OAAO,MAA1B;AAA2B,UAAA,EAAE,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH,QAAC,IAAD,CAAM,OAAN;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAcT,CAAC,CAACgB;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA,wBAAwBhB,CAAC,CAACiB;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI,QAAC,IAAD,CAAM,WAAN;AAAA,sBACKjB,CAAC,CAACkB,OAAF,CAAUC;AADf;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG,eAWH,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,MAAb;AAAoB,YAAA,aAAa,EAAEC,QAAQ,CAACd,IAAI,CAACC,MAAL,KAAgB,CAAjB,CAA3C;AAAgE,YAAA,SAAS,EAAE;AAA3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXG;AAAA,SAAY,MAAKP,CAAC,CAACgB,IAAK,EAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AAeH,KAjBA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;KA5BQrB,K;AA8BT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport faker from 'faker'\r\n\r\n\r\nimport { Card, Image, Rating } from 'semantic-ui-react'\r\n\r\nfunction Cards() {\r\n    const contacts = new Array(20).fill(1).map(d => faker.helpers.createCard())\r\n    console.log(contacts);\r\n    let report = () => `https://picsum.photos/200/100?random=1${Math.random(0.4)}`\r\n    contacts.forEach(d => d.src = report())\r\n    return (\r\n        <div style={{ display: 'grid', gridTemplateColumns: \"repeat(4,24%)\", justifyItems: 'center', gridGap: \"1%\", marginTop: '1vh', alignItems: 'center' }}>\r\n            {contacts.map(d => {\r\n\r\n                return <Card key={`key${d.name}`} >\r\n                    <Image src={d.src} wrapped ui={false} />\r\n                    <Card.Content>\r\n                        <Card.Header>{d.name}</Card.Header>\r\n                        <Card.Meta>\r\n                            <span className='date'>{d.email}</span>\r\n                        </Card.Meta>\r\n                        <Card.Description>\r\n                            {d.company.catchPhrase}\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                        <Rating icon='star' defaultRating={parseInt(Math.random() * 5)} maxRating={5} />\r\n                    </Card.Content>\r\n                </Card>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n"]},"metadata":{},"sourceType":"module"}